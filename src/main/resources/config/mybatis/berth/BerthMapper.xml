<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clubAppSys.modules.berth.mapper.BerthMapper">
	<sql id="where_berth">
		<if test="zoneId!=null ">
			and berth.zoneId=#{zoneId}
		</if>
		<if test="statusId!=null ">
			and berth.statusId=#{statusId}
		</if>
	</sql>

	<sql id="where_berth_book_records">
		<if test="userId!=null ">
			and berth_book_records.userId=#{userId}
		</if>
		<if test="berthId!=null ">
			and berth_book_records.berthId=#{berthId}
		</if>
	</sql>

	<sql id="set_berth">
		<if test="zoneId!=null">zoneId=#{zoneId},</if>
		<if test="statusId!=null">statusId=#{statusId},</if>
		<if test="remark!=null">remark=#{remark},</if>
	</sql>



	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		berth
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="Berth">
		insert into berth
		(zoneId,statusId,remark)
		values
		(#{zoneId,jdbcType=INTEGER},
		#{statusId,jdbcType=INTEGER}
		#{remark,jdbcType=VARCHAR}
		)
	</insert>

	<insert id="addBookRecord" parameterType="BerthBook">
		insert into
		berth_book_records
		(berthId,userId,parkingId,zoneId,bookTime,fromTime,toTime,cost,statusId,standardId)
		values
		(#{berthId,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{parkingId,jdbcType=INTEGER},
		#{zoneId,jdbcType=INTEGER},
		#{bookTime,jdbcType=TIMESTAMP},
		#{fromTime,jdbcType=TIMESTAMP},
		#{toTime,jdbcType=TIMESTAMP},
		#{cost,jdbcType=INTEGER},
		#{statusId,jdbcType=INTEGER},
		#{standardId,jdbcType=INTEGER}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="Berth">
		update BERTH
		<set>
			<include refid="set_berth"></include>
		</set>
		where id=#{id}
	</update>

	<select id="selectByPrimaryKey" resultType="Berth"
		parameterType="java.lang.Integer">
		select berth.id, zoneId,statusId,status.text status
		from
		berth,status
		where id=#{id}
		and berth.statusId=status.id
	</select>

	<select id="getByZoneId" resultType="Berth" parameterType="java.lang.Integer">
		select berth.id, zoneId,statusId,status.text status
		from berth,status
		where
		berth.zoneId=#{zoneId,jdbcType=INTEGER}
		and
		berth.statusId=status.id
	</select>

	<select id="getBookedBerths" resultType="BerthBook"
		parameterType="BerthBook">
		select
		berth_book_records.id,berth_book_records.userId,berth_book_records.fromTime,berth_book_records.toTime,berth_book_records.berthId,berth_book_records.bookTime,berth_book_records.cost,
		berth_book_records.zoneId,berth_book_records.statusId,status.text
		status,parking.name parkingName,zone.name zoneName
		from
		berth_book_records,status,parking,zone
		<where>
			<include refid="where_berth_book_records"></include>
		</where>
		and
		berth_book_records.statusId=status.id
		and
		berth_book_records.parkingId=parking.id
		and
		berth_book_records.zoneId=zone.id
		ORDER BY berth_book_records.fromTime
	</select>

	<select id="getSaleDates" resultType="BerthBook">
		select
		bookTime ,cost
		from
		berth_book_records
	</select>

	<select id="selectAll" resultType="Berth">
		select berth.id,
		zoneId,statusId,status.text status
		from berth,status
		where
		berth.statusId=status.id
	</select>
</mapper>